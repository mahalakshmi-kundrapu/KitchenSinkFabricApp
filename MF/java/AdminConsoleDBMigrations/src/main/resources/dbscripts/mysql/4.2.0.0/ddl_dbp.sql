
DROP VIEW IF EXISTS `wireaccounttransactionview`;
CREATE VIEW `wireaccounttransactionview` AS SELECT`accounts`.`Account_id` AS `Account_id`,  `accounts`.`AccountName` AS `AccountName`,  `accounts`.`AccountHolder` AS `AccountHolder`,  `accounts`.`UserName` AS `UserName`,  `accounts`.`ExternalBankidentity_id` AS `ExternalBankidentity_id`,  `accounts`.`CurrencyCode` AS `CurrencyCode`,  `accounts`.`User_id` AS `User_id`,  `accounts`.`AvailableBalance` AS `AvailableBalance`,  `accounts`.`Bank_id` AS `Bank_id`,  `accounts`.`ShowTransactions` AS `ShowTransactions`,  `accounts`.`CurrentBalance` AS `CurrentBalance`,  `accounts`.`SwiftCode` AS `SwiftCode`,  `accounts`.`RoutingNumber` AS `RoutingNumber`,  `transaction`.`Id` AS `transactionId`,  `transaction`.`Type_id` AS `transactiontype`,  `transaction`.`Customer_id` AS `Customer_id`,  `transaction`.`ExpenseCategory_id` AS `ExpenseCategory_id`,  `transaction`.`billid` AS `Bill_id`,  `transaction`.`Reference_id` AS `Reference_id`,  `transaction`.`fromAccountNumber` AS `fromAccountNumber`,  `transaction`.`fromAccountBalance` AS `fromAccountBalance`,  `transaction`.`toAccountNumber` AS `toAccountNumber`,  `transaction`.`toAccountBalance` AS `toAccountBalance`,  `transaction`.`amount` AS `amount`,  `transaction`.`Status_id` AS `Status_id`,  `transaction`.`statusDesc` AS `statusDesc`,  `transaction`.`isScheduled` AS `isScheduled`,  `transaction`.`category` AS `category`,  `transaction`.`billCategory` AS `billCategory`,  `transaction`.`toExternalAccountNumber` AS `ExternalAccountNumber`,  `transaction`.`Person_Id` AS `Person_Id`,  `transaction`.`frequencyType` AS `frequencyType`,  `transaction`.`createdDate` AS `createdDate`,  `transaction`.`cashlessEmail` AS `cashlessEmail`,  `transaction`.`cashlessMode` AS `cashlessMode`,  `transaction`.`cashlessOTP` AS `cashlessOTP`,  `transaction`.`cashlessOTPValidDate` AS `cashlessOTPValidDate`,  `transaction`.`cashlessPersonName` AS `cashlessPersonName`,  `transaction`.`cashlessPhone` AS `cashlessPhone`,  `transaction`.`cashlessSecurityCode` AS `cashlessSecurityCode`,  `transaction`.`cashWithdrawalTransactionStatus` AS `cashWithdrawalTransactionStatus`,  `transaction`.`frequencyEndDate` AS `frequencyEndDate`,  `transaction`.`frequencyStartDate` AS `frequencyStartDate`,  `transaction`.`hasDepositImage` AS `hasDepositImage`,  `transaction`.`Payee_id` AS `payeeId`,  `transaction`.`payeeName` AS `payeeName`,  `transaction`.`p2pContact` AS `p2pContact`,  `transaction`.`Person_Id` AS `personId`,  `transaction`.`recurrenceDesc` AS `recurrenceDesc`,  `transaction`.`numberOfRecurrences` AS `numberOfRecurrences`,  `transaction`.`scheduledDate` AS `scheduledDate`,  `transaction`.`transactionComments` AS `transactionComments`,  `transaction`.`notes` AS `transactionsNotes`,  `transaction`.`description` AS `transDescription`,  `transaction`.`transactionDate` AS `transactionDate`,  `transaction`.`frontImage1` AS `frontImage1`,  `transaction`.`frontImage2` AS `frontImage2`,  `transaction`.`backImage1` AS `backImage1`,  `transaction`.`backImage2` AS `backImage2`,  `transaction`.`checkDesc` AS `checkDesc`,  `transaction`.`checkNumber1` AS `checkNumber1`,  `transaction`.`checkNumber2` AS `checkNumber2`,  `transaction`.`checkNumber` AS `checkNumber`,  `transaction`.`checkReason` AS `checkReason`,  `transaction`.`requestValidity` AS `requestValidity`,  `transaction`.`checkDateOfIssue` AS `checkDateOfIssue`,  `transaction`.`bankName1` AS `bankName1`,  `transaction`.`bankName2` AS `bankName2`,  `transaction`.`withdrawlAmount1` AS `withdrawlAmount1`,  `transaction`.`withdrawlAmount2` AS `withdrawlAmount2`,  `transaction`.`cashAmount` AS `cashAmount`,  `transaction`.`amountRecieved` AS `amountRecieved`,  `transaction`.`payeeCurrency` AS `payeeCurrency`,  `transaction`.`fee` AS `fee`,  `transaction`.`isDisputed` AS `isDisputed`,  `transaction`.`disputeReason` AS `disputeReason`,  `transaction`.`disputeDescription` AS `disputeDescription`,  `transaction`.`disputeDate` AS `disputeDate`,  `transaction`.`disputeStatus` AS `disputeStatus`,  `transactiontype`.`description` AS `description`,  `payee`.`nickName` AS `nickName`,  `payee`.`accountNumber` AS `payeeAccountNumber`,  `payee`.`Type_id` AS `payeeType`,  `payee`.`addressLine1` AS `payeeAddressLine2`,  `payee`.`addressLine2` AS `payeeAddressLine1` FROM  (((`accounts`  JOIN `transaction`)  JOIN `transactiontype`)  JOIN `payee`) WHERE  (((`accounts`.`Account_id` = `transaction`.`fromAccountNumber`)OR (`accounts`.`Account_id` = `transaction`.`toAccountNumber`))AND (`transaction`.`Type_id` = `transactiontype`.`Id`)AND (`transaction`.`Payee_id` = `payee`.`Id`)) GROUP BY `transaction`.`Id` ORDER BY `transaction`.`createdDate` DESC;

DROP VIEW IF EXISTS `organisationview`;
CREATE VIEW `organisationview` AS SELECT`organisation`.`id` AS `org_id`,  `organisation`.`Name` AS `org_Name`,  `organisation`.`Type_Id` AS `org_typeId`,  `organisationcommunication`.`Value` AS `orgcomm_Value`,  `samplemember`.`Membership_id` AS `orgmem_memid`,  `samplemember`.`Taxid` AS `orgmem_taxid`,  `address`.`cityName` AS `cityName`,  `address`.`addressLine1` AS `addressLine1`,  `address`.`addressLine2` AS `addressLine2`,  `address`.`zipCode` AS `zipCode`, `address`.`id` AS `addressId`,  `sampleowner`.`FirstName` AS `orgown_firstName`,  `sampleowner`.`MidleName` AS `orgown_midleName`,  `sampleowner`.`LastName` AS `orgown_lastName`,  `sampleowner`.`DateOfBirth` AS `orgown_dob`,  `sampleowner`.`Ssn` AS `orgown_ssn`,  `sampleowner`.`Email` AS `orgown_email`,  `sampleowner`.`Phone` AS `orgown_phone`,  `address`.`state` AS `State`,  `address`.`country` AS `Country`,  `customertype`.`Name` AS `TypeName`,  `organisationaddress`.`IsPrimary` AS `IsPrimary` FROM  ((((((`organisation`  JOIN `organisationcommunication`)  JOIN `organisationaddress`)  JOIN `address`)  JOIN `customertype`)  LEFT JOIN `organisationmembership` `samplemember` ON ((`organisation`.`id` = `samplemember`.`Organization_id`)))  LEFT JOIN `organisationowner` `sampleowner` ON ((`sampleowner`.`Organization_id` = `organisation`.`id`))) WHERE  ((`organisation`.`id` = `organisationcommunication`.`Organization_id`)AND (`organisation`.`id` = `organisationaddress`.`Organization_id`)AND (`organisationaddress`.`Address_id` = `address`.`id`)AND (`organisation`.`Type_Id` = `customertype`.`id`));

ALTER TABLE `bbrequest` ADD COLUMN `accountId` VARCHAR(45) NULL DEFAULT NULL AFTER `softDelete`;

ALTER TABLE `OTP` ADD COLUMN `Phone` VARCHAR(45) NULL AFTER `createdts`;

DROP VIEW IF EXISTS `wirecustaccounttransactionview`;
CREATE VIEW `wirecustaccounttransactionview` AS select distinct `customeraccounts`.`Customer_id` AS `User_id`,`transaction`.`Id` AS `transactionId`,`transaction`.`Type_id` AS `transactiontype`,`transaction`.`Customer_id` AS `Customer_id`,`transaction`.`ExpenseCategory_id` AS `ExpenseCategory_id`,`transaction`.`billid` AS `Bill_id`,`transaction`.`Reference_id` AS `Reference_id`,`transaction`.`fromAccountNumber` AS `fromAccountNumber`,`transaction`.`fromAccountBalance` AS `fromAccountBalance`,`transaction`.`toAccountNumber` AS `toAccountNumber`,`transaction`.`toAccountBalance` AS `toAccountBalance`,`transaction`.`amount` AS `amount`,`transaction`.`Status_id` AS `Status_id`,`transaction`.`statusDesc` AS `statusDesc`,`transaction`.`isScheduled` AS `isScheduled`,`transaction`.`category` AS `category`,`transaction`.`billCategory` AS `billCategory`,`transaction`.`toExternalAccountNumber` AS `ExternalAccountNumber`,`transaction`.`Person_Id` AS `Person_Id`,`transaction`.`frequencyType` AS `frequencyType`,`transaction`.`createdDate` AS `createdDate`,`transaction`.`cashlessEmail` AS `cashlessEmail`,`transaction`.`cashlessMode` AS `cashlessMode`,`transaction`.`cashlessOTP` AS `cashlessOTP`,`transaction`.`cashlessOTPValidDate` AS `cashlessOTPValidDate`,`transaction`.`cashlessPersonName` AS `cashlessPersonName`,`transaction`.`cashlessPhone` AS `cashlessPhone`,`transaction`.`cashlessSecurityCode` AS `cashlessSecurityCode`,`transaction`.`cashWithdrawalTransactionStatus` AS `cashWithdrawalTransactionStatus`,`transaction`.`frequencyEndDate` AS `frequencyEndDate`,`transaction`.`frequencyStartDate` AS `frequencyStartDate`,`transaction`.`hasDepositImage` AS `hasDepositImage`,`transaction`.`Payee_id` AS `payeeId`,`transaction`.`payeeName` AS `payeeName`,`transaction`.`p2pContact` AS `p2pContact`,`transaction`.`Person_Id` AS `personId`,`transaction`.`recurrenceDesc` AS `recurrenceDesc`,`transaction`.`numberOfRecurrences` AS `numberOfRecurrences`,`transaction`.`scheduledDate` AS `scheduledDate`,`transaction`.`transactionComments` AS `transactionComments`,`transaction`.`notes` AS `transactionsNotes`,`transaction`.`description` AS `transDescription`,`transaction`.`transactionDate` AS `transactionDate`,`transaction`.`frontImage1` AS `frontImage1`,`transaction`.`frontImage2` AS `frontImage2`,`transaction`.`backImage1` AS `backImage1`,`transaction`.`backImage2` AS `backImage2`,`transaction`.`checkDesc` AS `checkDesc`,`transaction`.`checkNumber1` AS `checkNumber1`,`transaction`.`checkNumber2` AS `checkNumber2`,`transaction`.`checkNumber` AS `checkNumber`,`transaction`.`checkReason` AS `checkReason`,`transaction`.`requestValidity` AS `requestValidity`,`transaction`.`checkDateOfIssue` AS `checkDateOfIssue`,`transaction`.`bankName1` AS `bankName1`,`transaction`.`bankName2` AS `bankName2`,`transaction`.`withdrawlAmount1` AS `withdrawlAmount1`,`transaction`.`withdrawlAmount2` AS `withdrawlAmount2`,`transaction`.`cashAmount` AS `cashAmount`,`transaction`.`amountRecieved` AS `amountRecieved`,`transaction`.`payeeCurrency` AS `payeeCurrency`,`transaction`.`fee` AS `fee`,`transaction`.`isDisputed` AS `isDisputed`,`transaction`.`disputeReason` AS `disputeReason`,`transaction`.`disputeDescription` AS `disputeDescription`,`transaction`.`disputeDate` AS `disputeDate`,`transaction`.`disputeStatus` AS `disputeStatus`,`transactiontype`.`description` AS `description`,`payee`.`nickName` AS `nickName`,`payee`.`accountNumber` AS `payeeAccountNumber`,`payee`.`Type_id` AS `payeeType`,`payee`.`addressLine1` AS `payeeAddressLine2`,`payee`.`addressLine2` AS `payeeAddressLine1` from (((`customeraccounts` join `transaction`) join `transactiontype`) join `payee`) where (((`customeraccounts`.`Account_id` = `transaction`.`fromAccountNumber`) or (`customeraccounts`.`Account_id` = `transaction`.`toAccountNumber`)) and (`transaction`.`Type_id` = `transactiontype`.`Id`) and (`transaction`.`Payee_id` = `payee`.`Id`)) order by `transaction`.`createdDate` desc;

DROP VIEW IF EXISTS `customeraccountransactionview`;
CREATE VIEW `customeraccountransactionview` AS select distinct `customeraccounts`.`Customer_id` AS `User_id`,`transaction`.`Id` AS `transactionId`,`transaction`.`Type_id` AS `transactiontype`,`transaction`.`ExpenseCategory_id` AS `ExpenseCategory_id`,`transaction`.`billid` AS `Bill_id`,`transaction`.`Reference_id` AS `Reference_id`,`transaction`.`fromAccountNumber` AS `fromAccountNumber`,`transaction`.`fromAccountBalance` AS `fromAccountBalance`,`transaction`.`toAccountNumber` AS `toAccountNumber`,`transaction`.`toAccountBalance` AS `toAccountBalance`,`transaction`.`amount` AS `amount`,`transaction`.`convertedAmount` AS `convertedAmount`,`transaction`.`transactionCurrency` AS `transactionCurrency`,`transaction`.`baseCurrency` AS `baseCurrency`,`transaction`.`Status_id` AS `Status_id`,`transaction`.`statusDesc` AS `statusDesc`,`transaction`.`isScheduled` AS `isScheduled`,`transaction`.`category` AS `category`,`transaction`.`billCategory` AS `billCategory`,`transaction`.`toExternalAccountNumber` AS `ExternalAccountNumber`,`transaction`.`Person_Id` AS `Person_Id`,`transaction`.`frequencyType` AS `frequencyType`,`transaction`.`createdDate` AS `createdDate`,`transaction`.`cashlessEmail` AS `cashlessEmail`,`transaction`.`cashlessMode` AS `cashlessMode`,`transaction`.`cashlessOTP` AS `cashlessOTP`,`transaction`.`cashlessOTPValidDate` AS `cashlessOTPValidDate`,`transaction`.`cashlessPersonName` AS `cashlessPersonName`,`transaction`.`cashlessPhone` AS `cashlessPhone`,`transaction`.`cashlessSecurityCode` AS `cashlessSecurityCode`,`transaction`.`cashWithdrawalTransactionStatus` AS `cashWithdrawalTransactionStatus`,`transaction`.`frequencyEndDate` AS `frequencyEndDate`,`transaction`.`frequencyStartDate` AS `frequencyStartDate`,`transaction`.`hasDepositImage` AS `hasDepositImage`,`transaction`.`Payee_id` AS `payeeId`,`transaction`.`payeeName` AS `payeeName`,`transaction`.`p2pContact` AS `p2pContact`,`transaction`.`Person_Id` AS `personId`,`transaction`.`recurrenceDesc` AS `recurrenceDesc`,`transaction`.`numberOfRecurrences` AS `numberOfRecurrences`,`transaction`.`scheduledDate` AS `scheduledDate`,`transaction`.`transactionComments` AS `transactionComments`,`transaction`.`notes` AS `transactionsNotes`,`transaction`.`description` AS `transDescription`,`transaction`.`transactionDate` AS `transactionDate`,`transaction`.`frontImage1` AS `frontImage1`,`transaction`.`frontImage2` AS `frontImage2`,`transaction`.`backImage1` AS `backImage1`,`transaction`.`backImage2` AS `backImage2`,`transaction`.`checkDesc` AS `checkDesc`,`transaction`.`checkNumber1` AS `checkNumber1`,`transaction`.`checkNumber2` AS `checkNumber2`,`transaction`.`checkNumber` AS `checkNumber`,`transaction`.`checkReason` AS `checkReason`,`transaction`.`requestValidity` AS `requestValidity`,`transaction`.`checkDateOfIssue` AS `checkDateOfIssue`,`transaction`.`bankName1` AS `bankName1`,`transaction`.`bankName2` AS `bankName2`,`transaction`.`withdrawlAmount1` AS `withdrawlAmount1`,`transaction`.`withdrawlAmount2` AS `withdrawlAmount2`,`transaction`.`cashAmount` AS `cashAmount`,`transaction`.`payeeCurrency` AS `payeeCurrency`,`transaction`.`fee` AS `fee`,`transaction`.`feePaidByReceipent` AS `feePaidByReceipent`,`transaction`.`feeCurrency` AS `feeCurrency`,`transaction`.`isDisputed` AS `isDisputed`,`transaction`.`disputeReason` AS `disputeReason`,`transaction`.`disputeDescription` AS `disputeDescription`,`transaction`.`disputeDate` AS `disputeDate`,`transaction`.`disputeStatus` AS `disputeStatus`,`transactiontype`.`description` AS `description`,`transaction`.`statementReference` AS `statementReference`,`transaction`.`transCreditDebitIndicator` AS `transCreditDebitIndicator`,`transaction`.`bookingDateTime` AS `bookingDateTime`,`transaction`.`valueDateTime` AS `valueDateTime`,`transaction`.`transactionInformation` AS `transactionInformation`,`transaction`.`addressLine` AS `addressLine`,`transaction`.`transactionAmount` AS `transactionAmount`,`transaction`.`chargeAmount` AS `chargeAmount`,`transaction`.`chargeCurrency` AS `chargeCurrency`,`transaction`.`sourceCurrency` AS `sourceCurrency`,`transaction`.`targetCurrency` AS `targetCurrency`,`transaction`.`unitCurrency` AS `unitCurrency`,`transaction`.`exchangeRate` AS `exchangeRate`,`transaction`.`contractIdentification` AS `contractIdentification`,`transaction`.`quotationDate` AS `quotationDate`,`transaction`.`instructedAmount` AS `instructedAmount`,`transaction`.`instructedCurrency` AS `instructedCurrency`,`transaction`.`transactionCode` AS `transactionCode`,`transaction`.`transactionSubCode` AS `transactionSubCode`,`transaction`.`proprietaryTransactionCode` AS `proprietaryTransactionCode`,`transaction`.`proprietaryTransactionIssuer` AS `proprietaryTransactionIssuer`,`transaction`.`balanceCreditDebitIndicator` AS `balanceCreditDebitIndicator`,`transaction`.`balanceType` AS `balanceType`,`transaction`.`balanceAmount` AS `balanceAmount`,`transaction`.`balanceCurrency` AS `balanceCurrency`,`transaction`.`merchantName` AS `merchantName`,`transaction`.`merchantCategoryCode` AS `merchantCategoryCode`,`transaction`.`creditorAgentSchemeName` AS `creditorAgentSchemeName`,`transaction`.`creditorAgentIdentification` AS `creditorAgentIdentification`,`transaction`.`creditorAgentName` AS `creditorAgentName`,`transaction`.`creditorAgentaddressType` AS `creditorAgentaddressType`,`transaction`.`creditorAgentDepartment` AS `creditorAgentDepartment`,`transaction`.`creditorAgentSubDepartment` AS `creditorAgentSubDepartment`,`transaction`.`creditorAgentStreetName` AS `creditorAgentStreetName`,`transaction`.`creditorAgentBuildingNumber` AS `creditorAgentBuildingNumber`,`transaction`.`creditorAgentPostCode` AS `creditorAgentPostCode`,`transaction`.`creditorAgentTownName` AS `creditorAgentTownName`,`transaction`.`creditorAgentCountrySubDivision` AS `creditorAgentCountrySubDivision`,`transaction`.`creditorAgentCountry` AS `creditorAgentCountry`,`transaction`.`creditorAgentAddressLine` AS `creditorAgentAddressLine`,`transaction`.`creditorAccountSchemeName` AS `creditorAccountSchemeName`,`transaction`.`creditorAccountIdentification` AS `creditorAccountIdentification`,`transaction`.`creditorAccountName` AS `creditorAccountName`,`transaction`.`creditorAccountSeconIdentification` AS `creditorAccountSeconIdentification`,`transaction`.`debtorAgentSchemeName` AS `debtorAgentSchemeName`,`transaction`.`debtorAgentIdentification` AS `debtorAgentIdentification`,`transaction`.`debtorAgentName` AS `debtorAgentName`,`transaction`.`debtorAgentAddressType` AS `debtorAgentAddressType`,`transaction`.`debtorAgentDepartment` AS `debtorAgentDepartment`,`transaction`.`debtorAgentSubDepartment` AS `debtorAgentSubDepartment`,`transaction`.`debtorAgentStreetName` AS `debtorAgentStreetName`,`transaction`.`debtorAgentBuildingNumber` AS `debtorAgentBuildingNumber`,`transaction`.`dedtorAgentPostCode` AS `dedtorAgentPostCode`,`transaction`.`debtorAgentTownName` AS `debtorAgentTownName`,`transaction`.`debtorAgentCountrySubDivision` AS `debtorAgentCountrySubDivision`,`transaction`.`debtorAgentCountry` AS `debtorAgentCountry`,`transaction`.`debtorAgentAddressLine` AS `debtorAgentAddressLine`,`transaction`.`debtorAccountSchemeName` AS `debtorAccountSchemeName`,`transaction`.`debtorAccountIdentification` AS `debtorAccountIdentification`,`transaction`.`debtorAccountName` AS `debtorAccountName`,`transaction`.`debtorAccountSeconIdentification` AS `debtorAccountSeconIdentification`,`transaction`.`cardInstrumentSchemeName` AS `cardInstrumentSchemeName`,`transaction`.`cardInstrumentAuthorisationType` AS `cardInstrumentAuthorisationType`,`transaction`.`cardInstrumentName` AS `cardInstrumentName`,`transaction`.`cardInstrumentIdentification` AS `cardInstrumentIdentification`,`transaction`.`FirstPaymentDateTime` AS `FirstPaymentDateTime`,`transaction`.`NextPaymentDateTime` AS `NextPaymentDateTime`,`transaction`.`FinalPaymentDateTime` AS `FinalPaymentDateTime`,`transaction`.`StandingOrderStatusCode` AS `StandingOrderStatusCode`,`transaction`.`FP_Amount` AS `FP_Amount`,`transaction`.`FP_Currency` AS `FP_Currency`,`transaction`.`NP_Amount` AS `NP_Amount`,`transaction`.`NP_Currency` AS `NP_Currency`,`transaction`.`FPA_Amount` AS `FPA_Amount`,`transaction`.`FPA_Currency` AS `FPA_Currency`,`transaction`.`IBAN` AS `IBAN`,`transaction`.`sortCode` AS `sortCode`,`transaction`.`beneficiaryName` AS `beneficiaryName`,`transaction`.`bankName` AS `bankName`,`transaction`.`swiftCode` AS `swiftCode` from ((`customeraccounts` join `transaction`) join `transactiontype`) where (((`customeraccounts`.`Account_id` = `transaction`.`fromAccountNumber`) or (`customeraccounts`.`Account_id` = `transaction`.`toAccountNumber`)) and (`customeraccounts`.`Customer_id` is not null) and (`transaction`.`Type_id` = `transactiontype`.`Id`)) order by `transaction`.`createdDate` desc;

DROP VIEW IF EXISTS `customeraddressmbview`;
CREATE VIEW `customeraddressmbview` AS SELECT `c`.`id` AS `CustomerId`,  `ca`.`Address_id` AS `Address_id`,  `ca`.`isPrimary` AS `isPrimary`,  `at`.`Description` AS `AddressType`,  `a`.`id` AS `AddressId`,  `a`.`addressLine1` AS `AddressLine1`,  `a`.`addressLine2` AS `AddressLine2`,  `a`.`addressLine3` AS `AddressLine3`,  `a`.`zipCode` AS `ZipCode`,  `a`.`cityName` AS `CityName`,  `a`.`country` AS `CountryName`,  `a`.`state` AS `State` FROM  (((`customeraddress` `ca`  LEFT JOIN `customer` `c` ON ((`ca`.`Customer_id` = `c`.`id`)))  LEFT JOIN `address` `a` ON ((`a`.`id` = `ca`.`Address_id`)))  LEFT JOIN `addresstype` `at` ON ((`ca`.`Type_id` = `at`.`id`))) WHERE  (`a`.`softdeleteflag` = '0');

ALTER TABLE `customercommunication` CHANGE COLUMN `countryType` `countryType` VARCHAR(50) NULL DEFAULT 'Domestic' ;