# File holds all the queries related to logs module

## queries on adminactivity table
ADMINACTIVITY_READ=SELECT * FROM adminactivity
ADMINACTIVITY_INSERT=INSERT INTO adminactivity (id,event,description,username,userRole,moduleName,eventts,status,createdBy,createdOn) VALUES (:id,:event,:description,:username,:userRole,:moduleName,:eventts,:status,:createdBy,:createdOn)
ADMINACTIVITY_DELETE=DELETE FROM adminactivity
ADMINACTIVITY_COUNT_READ=SELECT count(1) FROM adminactivity

## queries on customeractivity table
CUSTOMERACTIVITY_READ=SELECT * FROM customeractivity
CUSTOMERACTIVITY_INSERT=INSERT INTO customeractivity (id,sessionId,username,moduleName,activityType,description,eventts,status,channel,ipAddress,device,deviceId,operatingSystem,browser,referenceId,errorCode,createdBy,createdOn,customerId,typeOfMFA,payeeName,accountNumber,relationshipNumber,phoneNumber,email,bankName,maskedAccountNumber) VALUES (:id,:sessionId,:username,:moduleName,:activityType,:description,:eventts,:status,:channel,:ipAddress,:device,:deviceId,:operatingSystem,:browser,:referenceId,:errorCode,:createdBy,:createdOn,:customerId,:typeOfMFA,:payeeName,:accountNumber,:relationshipNumber,:phoneNumber,:email,:bankName,:maskedAccountNumber)
CUSTOMERACTIVITY_DELETE=DELETE FROM customeractivity
CUSTOMERACTIVITY_READ_COUNT=SELECT count(1)  FROM customeractivity
CUSTOMERACTIVITY_LAST_N_SESSIONS=SELECT sessionId, min(eventts) as startDate, max(eventts) as endDate, count(*) as numberOfActivities,ipAddress, channel, operatingSystem, device, deviceId, browser FROM customeractivity WHERE username=:username GROUP BY sessionId ORDER BY endDate DESC LIMIT :limit;

## queries on admincustomeractivity table
ADMINCUSTOMERACTIVITY_READ=SELECT * FROM admincustomeractivity
ADMINCUSTOMERACTIVITY_INSERT=INSERT INTO admincustomeractivity (id,customerId,adminName,adminRole,activityType,description,eventts,status,createdBy,createdOn) VALUES (:id,:customerId,:adminName,:adminRole,:activityType,:description,:eventts,:status,:createdBy,:createdOn)
ADMINCUSTOMERACTIVITY_DELETE=DELETE FROM admincustomeractivity
ADMINCUSTOMERACTIVITY_READ_COUNT=SELECT count(1)  FROM admincustomeractivity

## queries on transactionlog table
TRANSACTIONLOG_READ=SELECT * FROM transactionlog
TRANSACTIONLOG_INSERT=INSERT INTO transactionlog (id,transactionId,username,payeeName,serviceName,type,fromAccount,fromAccountType,toAccount,toAccountType,amount,currencyCode,channel,status,description,routingNumber,batchId,transactionDate,fromMobileOrEmail,toMobileOrEmail,swiftCode,internationalRoutingCode,ibanNumber,createdBy,createdOn,module,customerId,device,operatingSystem,deviceId,ipAddress,referenceNumber,transactionDescription,errorCode,recipientType,recipientBankName,recipientAddress,recipientBankAddress,checkNumber,cashWithdrawalFor) VALUES (:id,:transactionId,:username,:payeeName,:serviceName,:type,:fromAccount,:fromAccountType,:toAccount,:toAccountType,:amount,:currencyCode,:channel,:status,:description,:routingNumber,:batchId,:transactionDate,:fromMobileOrEmail,:toMobileOrEmail,:swiftCode,:internationalRoutingCode,:ibanNumber,:createdBy,:createdOn,:module,:customerId,:device,:operatingSystem,:deviceId,:ipAddress,:referenceNumber,:transactionDescription,:errorCode,:recipientType,:recipientBankName,:recipientAddress,:recipientBankAddress,:checkNumber,:cashWithdrawalFor)
TRANSACTIONLOG_DELETE=DELETE FROM transactionlog
TRANSACTIONLOG_COUNT_READ=SELECT count(1) FROM transactionlog
TRANSACTIONVALUEVOLUMETYPE_READ=select count(id) volume, sum(amount) value, serviceName, channel, transactionDate from transactionlog

## queries on auditlog table
AUDITLOG_ARCH_READ=select * from auditactivity
AUDITLOG_DELETE=DELETE FROM auditactivity
AUDITLOG_INSERT=INSERT INTO auditactivity(Id,EventId,EventType,EventSubType,Status_Id,sessionId,AppId,UserName,Customer_Id,AdminUserName,AdminUserRole,Producer,MoneyMovementRefId,EventData,creditcardnumber,mfa_State,mfa_ServiceKey,mfa_Type,nonSearchable,phoneNumber,email,deviceModel,operatingSystem,browser,deviceId,channel,appVersion,platform,ipAddress,eventts,createdby,createdts,softdeleteflag)VALUES(:id,:eventid,:eventtype,:eventsubtype,:status_id,:sessionId,:appid,:username,:customer_id,:adminusername,:adminuserrole,:producer,:moneymovementrefid,:eventdata,:creditcardnumber,:mfa_State,:mfa_ServiceKey,:mfa_Type,:nonSearchable,:phoneNumber,:email,:deviceModel,:operatingSystem,:browser,:deviceId,:channel,:appVersion,:platform,:ipAddress,:eventts,:createdby,:createdts,:softdeleteflag)
AUDITLOG_READ=SELECT Id as id, EventType as moduleName, EventSubType as activityType, Status_Id as status, sessionId,UserName as username, channel, ipAddress, eventts,operatingSystem, IF(deviceModel = '' or ISNULL(deviceModel), browser, deviceModel) as device  FROM auditactivity
AUDITLOG_COUNT_READ=SELECT count(1) FROM auditactivity
AUDITLOG_SEARCH_SELECT_QUERY=SELECT al.Id,al.EventId,al.EventType,al.EventSubType,al.Status_Id,al.sessionId,al.AppId,al.UserName,al.Customer_Id,al.isCSRAssist,al.appSessionId,al.payeeNickName,al.relationshipNumber,al.AdminUserName,al.AdminUserRole,al.Producer,al.EventData,al.mfa_State,al.mfa_ServiceKey,al.mfa_Type,al.phoneNumber,al.email,al.deviceModel,al.operatingSystem,al.deviceId,al.channel,al.appVersion,al.platform,al.ipAddress,al.eventts,al.createdby,al.createdts,ml.isScheduled,ml.Payee_id,ml.Bill_id,ml.Type_id,ml.Reference_id,CONCAT('****', RIGHT(ml.fromAccountNumber, 4)) as fromAccountNumber,CONCAT('****', RIGHT(ml.toAccountNumber, 4)) as toAccountNumber,ml.amount,ml.transactionCurrency,ml.baseCurrency,ml.notes,ml.checkNumber,ml.description,ml.scheduledDate,ml.transactionDate,ml.createdDate,ml.transactionComments,ml.toExternalAccountNumber,ml.Person_Id,ml.frequencyType,ml.frequencyStartDate,ml.frequencyEndDate,ml.cashlessPin,ml.category,ml.billCategory,ml.recurrenceDesc,ml.deliverBy,ml.p2pContact,ml.p2pRequiredDate,ml.requestCreatedDate,ml.penaltyFlag,ml.payoffFlag,ml.viewReportLink,ml.isPaypersonDeleted,ml.fee,ml.feeCurrency,ml.feePaidByReceipent,ml.checkDesc,ml.checkNumber1,ml.checkNumber2,ml.withdrawlAmount1,ml.withdrawlAmount2,ml.cashAmount,ml.payeeCurrency,ml.isDisputed,ml.disputeDescription,ml.disputeReason,ml.disputeStatus,ml.disputeDate,ml.payeeName,ml.checkDateOfIssue,ml.checkReason,ml.isPayeeDeleted,ml.amountRecieved,ml.addressLine,ml.transactionAmount,ml.chargeAmount,ml.chargeCurrency,ml.sourceCurrency,ml.targetCurrency,ml.unitCurrency,ml.exchangeRate,ml.balanceType,ml.balanceAmount,ml.balanceCurrency,ml.cardInstrumentName,ml.cardInstrumentIdentification,ml.IBAN,ml.RI_Reference,ml.beneficiaryName,ml.bankName,ml.swiftCode,ml.DomesticPaymentId,ml.payPersonName FROM auditactivity
AUDITLOG_LAST_N_SESSIONS=SELECT sessionId, min(eventts) as startDate, max(eventts) as endDate, count(*) as numberOfActivities,ipAddress, channel, operatingSystem, deviceModel as device, deviceId, null as browser FROM auditactivity WHERE UserName=:username and !isnull(sessionId) GROUP BY sessionId ORDER BY endDate DESC LIMIT :limit;

## queries on moneymovementlog table
MONEYMOVEMENT_READ=SELECT * FROM moneymovementlog
MONEYMOVEMENT_DELETE=DELETE FROM moneymovementlog
MONEYMOVEMENT_INSERT=INSERT INTO moneymovementlog (Id, isScheduled, Customer_id, ExpenseCategory_id, Payee_id, Bill_id, Type_id, Reference_id, fromAccountNumber, fromAccountBalance, toAccountNumber, toAccountBalance, amount, convertedAmount, transactionCurrency, baseCurrency, Status_id, statusDesc, notes, checkNumber, imageURL1, imageURL2, hasDepositImage, description, scheduledDate, transactionDate, createdDate, transactionComments, toExternalAccountNumber, Person_Id, frequencyType, numberOfRecurrences, frequencyStartDate, frequencyEndDate, checkImage, checkImageBack, cashlessOTPValidDate, cashlessOTP, cashlessPhone, cashlessEmail, cashlessPersonName, cashlessMode, cashlessSecurityCode, cashWithdrawalTransactionStatus, cashlessPin, category, billCategory, recurrenceDesc, deliverBy, p2pContact, p2pRequiredDate, requestCreatedDate, penaltyFlag, payoffFlag, viewReportLink, isPaypersonDeleted, fee, feeCurrency, feePaidByReceipent, frontImage1, frontImage2, backImage1, backImage2, checkDesc, checkNumber1, checkNumber2, bankName1, bankName2, withdrawlAmount1, withdrawlAmount2, cashAmount, payeeCurrency, billid, isDisputed, disputeDescription, disputeReason, disputeStatus, disputeDate, payeeName, checkDateOfIssue, checkReason, isPayeeDeleted, amountRecieved, requestValidity, statementReference, transCreditDebitIndicator, bookingDateTime, valueDateTime, transactionInformation, addressLine, transactionAmount, chargeAmount, chargeCurrency, sourceCurrency, targetCurrency, unitCurrency, exchangeRate, contractIdentification, quotationDate, instructedAmount, instructedCurrency, transactionCode, transactionSubCode, proprietaryTransactionCode, proprietaryTransactionIssuer, balanceCreditDebitIndicator, balanceType, balanceAmount, balanceCurrency, merchantName, merchantCategoryCode, creditorAgentSchemeName, creditorAgentIdentification, creditorAgentName, creditorAgentaddressType, creditorAgentDepartment, creditorAgentSubDepartment, creditorAgentStreetName, creditorAgentBuildingNumber, creditorAgentPostCode, creditorAgentTownName, creditorAgentCountrySubDivision, creditorAgentCountry, creditorAgentAddressLine, creditorAccountSchemeName, creditorAccountIdentification, creditorAccountName, creditorAccountSeconIdentification, debtorAgentSchemeName, debtorAgentIdentification, debtorAgentName, debtorAgentAddressType, debtorAgentDepartment, debtorAgentSubDepartment, debtorAgentStreetName, debtorAgentBuildingNumber, dedtorAgentPostCode, debtorAgentTownName, debtorAgentCountrySubDivision, debtorAgentCountry, debtorAgentAddressLine, debtorAccountSchemeName, debtorAccountIdentification, debtorAccountName, debtorAccountSeconIdentification, cardInstrumentSchemeName, cardInstrumentAuthorisationType, cardInstrumentName, cardInstrumentIdentification, IBAN, sortCode, FirstPaymentDateTime, NextPaymentDateTime, FinalPaymentDateTime, StandingOrderStatusCode, FP_Amount, FP_Currency, NP_Amount, NP_Currency, FPA_Amount, FPA_Currency, ConsentId, Initiation_InstructionIdentification, Initiation_EndToEndIdentification, RI_Reference, RI_Unstructured, RiskPaymentContextCode, MerchantCustomerIdentification, beneficiaryName, bankName, swiftCode, DomesticPaymentId, linkSelf, StatusUpdateDateTime, dataStatus, serviceName, payPersonName) VALUES (:id, :isScheduled, :customer_id, :expenseCategory_id, :payee_id, :bill_id, :type_id, :reference_id, :fromAccountNumber, :fromAccountBalance, :toAccountNumber, :toAccountBalance, :amount, :convertedAmount, :transactionCurrency, :baseCurrency, :status_id, :statusDesc, :notes, :checkNumber, :imageURL1, :imageURL2, :hasDepositImage, :description, :scheduledDate, :transactionDate, :createdDate, :transactionComments, :toExternalAccountNumber, :person_Id, :frequencyType, :numberOfRecurrences, :frequencyStartDate, :frequencyEndDate, :checkImage, :checkImageBack, :cashlessOTPValidDate, :cashlessOTP, :cashlessPhone, :cashlessEmail, :cashlessPersonName, :cashlessMode, :cashlessSecurityCode, :cashWithdrawalTransactionStatus, :cashlessPin, :category, :billCategory, :recurrenceDesc, :deliverBy, :p2pContact, :p2pRequiredDate, :requestCreatedDate, :penaltyFlag, :payoffFlag, :viewReportLink, :isPaypersonDeleted, :fee, :feeCurrency, :feePaidByReceipent, :frontImage1, :frontImage2, :backImage1, :backImage2, :checkDesc, :checkNumber1, :checkNumber2, :bankName1, :bankName2, :withdrawlAmount1, :withdrawlAmount2, :cashAmount, :payeeCurrency, :billid, :isDisputed, :disputeDescription, :disputeReason, :disputeStatus, :disputeDate, :payeeName, :checkDateOfIssue, :checkReason, :isPayeeDeleted, :amountRecieved, :requestValidity, :statementReference, :transCreditDebitIndicator, :bookingDateTime, :valueDateTime, :transactionInformation, :addressLine, :transactionAmount, :chargeAmount, :chargeCurrency, :sourceCurrency, :targetCurrency, :unitCurrency, :exchangeRate, :contractIdentification, :quotationDate, :instructedAmount, :instructedCurrency, :transactionCode, :transactionSubCode, :proprietaryTransactionCode, :proprietaryTransactionIssuer, :balanceCreditDebitIndicator, :balanceType, :balanceAmount, :balanceCurrency, :merchantName, :merchantCategoryCode, :creditorAgentSchemeName, :creditorAgentIdentification, :creditorAgentName, :creditorAgentaddressType, :creditorAgentDepartment, :creditorAgentSubDepartment, :creditorAgentStreetName, :creditorAgentBuildingNumber, :creditorAgentPostCode, :creditorAgentTownName, :creditorAgentCountrySubDivision, :creditorAgentCountry, :creditorAgentAddressLine, :creditorAccountSchemeName, :creditorAccountIdentification, :creditorAccountName, :creditorAccountSeconIdentification, :debtorAgentSchemeName, :debtorAgentIdentification, :debtorAgentName, :debtorAgentAddressType, :debtorAgentDepartment, :debtorAgentSubDepartment, :debtorAgentStreetName, :debtorAgentBuildingNumber, :dedtorAgentPostCode, :debtorAgentTownName, :debtorAgentCountrySubDivision, :debtorAgentCountry, :debtorAgentAddressLine, :debtorAccountSchemeName, :debtorAccountIdentification, :debtorAccountName, :debtorAccountSeconIdentification, :cardInstrumentSchemeName, :cardInstrumentAuthorisationType, :cardInstrumentName, :cardInstrumentIdentification, :IBAN, :sortCode, :firstPaymentDateTime, :nextPaymentDateTime, :finalPaymentDateTime, :standingOrderStatusCode, :FP_Amount, :FP_Currency, :NP_Amount, :NP_Currency, :FPA_Amount, :FPA_Currency, :consentId, :initiation_InstructionIdentification, :initiation_EndToEndIdentification, :RI_Reference, :RI_Unstructured, :riskPaymentContextCode, :merchantCustomerIdentification, :beneficiaryName, :bankName, :swiftCode, :domesticPaymentId, :linkSelf, :statusUpdateDateTime, :dataStatus, :serviceName, :payPersonName)
